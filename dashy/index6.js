import{S as ve,i as ye,s as ce,ak as se,O as Z,P as X,N as me,q as z,c as T,V,r as $,u as O,L as b,m as U,W as x,t as C,v as ie,a as S,x as ue,n as Me,D as j,d as H,E as we,b as N,a5 as G,I as ke,bb as Ce,p as le,K as E,Z as ee,a1 as Se,ah as $e,av as Ae,e as Ke,aP as Ge,o as Pe,ay as Re,aB as ze}from"./overlayscrollbars.js";let Ie=class{constructor(e,r){if(this.val=0,this.destination=null,this.origin=null,typeof r=="number"&&(this.val=r),typeof e!="object")throw new Error("Measures cannot be blank");this.measureData=e}from(e){if(this.destination!=null)throw new Error(".from must be called before .to");return this.origin=this.getUnit(e),this.origin==null&&this.throwUnsupportedUnitError(e),this}to(e){var r,a;if(this.origin==null)throw new Error(".to must be called after .from");this.destination=this.getUnit(e),this.destination==null&&this.throwUnsupportedUnitError(e);const s=this.destination,o=this.origin;if(o.abbr===s.abbr)return this.val;if(s.measure!=o.measure)throw new Error(`Cannot convert incompatible measures of ${s.measure} and ${o.measure}`);let l=this.val*o.unit.to_anchor;if(o.unit.anchor_shift&&(l-=o.unit.anchor_shift),o.system!=s.system){const t=this.measureData[o.measure].anchors;if(t==null)throw new Error(`Unable to convert units. Anchors are missing for "${o.measure}" and "${s.measure}" measures.`);const u=t[o.system];if(u==null)throw new Error(`Unable to find anchor for "${o.measure}" to "${s.measure}". Please make sure it is defined.`);const m=(r=u[s.system])===null||r===void 0?void 0:r.transform,h=(a=u[s.system])===null||a===void 0?void 0:a.ratio;if(typeof m=="function")l=m(l);else if(typeof h=="number")l*=h;else throw new Error("A system anchor needs to either have a defined ratio number or a transform function.")}return s.unit.anchor_shift&&(l+=s.unit.anchor_shift),l/s.unit.to_anchor}toBest(e){var r,a,s;if(this.origin==null)throw new Error(".toBest must be called after .from");const o=this.val<0;let l=[],i=o?-1:1,t=this.origin.system;typeof e=="object"&&(l=(r=e.exclude)!==null&&r!==void 0?r:[],i=(a=e.cutOffNumber)!==null&&a!==void 0?a:i,t=(s=e.system)!==null&&s!==void 0?s:this.origin.system);let u=null;for(const m of this.possibilities()){const h=this.describe(m);if(l.indexOf(m)===-1&&h.system===t){const v=this.to(m);if(o?v>i:v<i)continue;(u===null||(o?v<=i&&v>u.val:v>=i&&v<u.val))&&(u={val:v,unit:m,singular:h.singular,plural:h.plural})}}return u}getUnit(e){for(const[a,s]of Object.entries(this.measureData))for(const[o,l]of Object.entries(s.systems))for(const[i,t]of Object.entries(l))if(i==e)return{abbr:e,measure:a,system:o,unit:t};return null}describe(e){const r=this.getUnit(e);if(r!=null)return this.describeUnit(r);this.throwUnsupportedUnitError(e)}describeUnit(e){return{abbr:e.abbr,measure:e.measure,system:e.system,singular:e.unit.name.singular,plural:e.unit.name.plural}}list(e){const r=[];if(e==null)for(const[a,s]of Object.entries(this.measureData))for(const[o,l]of Object.entries(s.systems))for(const[i,t]of Object.entries(l))r.push(this.describeUnit({abbr:i,measure:a,system:o,unit:t}));else if(e in this.measureData){const a=this.measureData[e];for(const[s,o]of Object.entries(a.systems))for(const[l,i]of Object.entries(o))r.push(this.describeUnit({abbr:l,measure:e,system:s,unit:i}))}else throw new Error(`Meausre "${e}" not found.`);return r}throwUnsupportedUnitError(e){let r=[];for(const a of Object.values(this.measureData))for(const s of Object.values(a.systems))r=r.concat(Object.keys(s));throw new Error(`Unsupported unit ${e}, use one of: ${r.join(", ")}`)}possibilities(e){let r=[],a=[];typeof e=="string"?a.push(e):this.origin!=null?a.push(this.origin.measure):a=Object.keys(this.measureData);for(const s of a){const o=this.measureData[s].systems;for(const l of Object.values(o))r=[...r,...Object.keys(l)]}return r}measures(){return Object.keys(this.measureData)}};function Ne(n){return e=>new Ie(n,e)}const Fe={"g-force":{name:{singular:"g-force",plural:"g-forces"},to_anchor:9.80665},"m/s2":{name:{singular:"Metre per second squared",plural:"Metres per second squared"},to_anchor:1}},De={systems:{metric:Fe}},qe={rad:{name:{singular:"radian",plural:"radians"},to_anchor:180/Math.PI},deg:{name:{singular:"degree",plural:"degrees"},to_anchor:1},grad:{name:{singular:"gradian",plural:"gradians"},to_anchor:9/10},arcmin:{name:{singular:"arcminute",plural:"arcminutes"},to_anchor:1/60},arcsec:{name:{singular:"arcsecond",plural:"arcseconds"},to_anchor:1/3600}},Ve={systems:{SI:qe}},Te={VA:{name:{singular:"Volt-Ampere",plural:"Volt-Amperes"},to_anchor:1},mVA:{name:{singular:"Millivolt-Ampere",plural:"Millivolt-Amperes"},to_anchor:.001},kVA:{name:{singular:"Kilovolt-Ampere",plural:"Kilovolt-Amperes"},to_anchor:1e3},MVA:{name:{singular:"Megavolt-Ampere",plural:"Megavolt-Amperes"},to_anchor:1e6},GVA:{name:{singular:"Gigavolt-Ampere",plural:"Gigavolt-Amperes"},to_anchor:1e9}},Ue={systems:{SI:Te}},He={nm2:{name:{singular:"Square Nanometer",plural:"Square Nanometers"},to_anchor:1e-18},μm2:{name:{singular:"Square Micrometer",plural:"Square Micrometers"},to_anchor:1e-12},mm2:{name:{singular:"Square Millimeter",plural:"Square Millimeters"},to_anchor:1/1e6},cm2:{name:{singular:"Square Centimeter",plural:"Square Centimeters"},to_anchor:1/1e4},m2:{name:{singular:"Square Meter",plural:"Square Meters"},to_anchor:1},ha:{name:{singular:"Hectare",plural:"Hectares"},to_anchor:1e4},km2:{name:{singular:"Square Kilometer",plural:"Square Kilometers"},to_anchor:1e6}},Oe={in2:{name:{singular:"Square Inch",plural:"Square Inches"},to_anchor:1/144},yd2:{name:{singular:"Square Yard",plural:"Square Yards"},to_anchor:9},ft2:{name:{singular:"Square Foot",plural:"Square Feet"},to_anchor:1},ac:{name:{singular:"Acre",plural:"Acres"},to_anchor:43560},mi2:{name:{singular:"Square Mile",plural:"Square Miles"},to_anchor:27878400}},je={systems:{metric:He,imperial:Oe},anchors:{metric:{imperial:{ratio:10.7639}},imperial:{metric:{ratio:1/10.7639}}}},We={c:{name:{singular:"Coulomb",plural:"Coulombs"},to_anchor:1},mC:{name:{singular:"Millicoulomb",plural:"Millicoulombs"},to_anchor:1/1e3},μC:{name:{singular:"Microcoulomb",plural:"Microcoulombs"},to_anchor:1/1e6},nC:{name:{singular:"Nanocoulomb",plural:"Nanocoulombs"},to_anchor:1e-9},pC:{name:{singular:"Picocoulomb",plural:"Picocoulombs"},to_anchor:1e-12}},Ee={systems:{SI:We}},Le={A:{name:{singular:"Ampere",plural:"Amperes"},to_anchor:1},mA:{name:{singular:"Milliampere",plural:"Milliamperes"},to_anchor:.001},kA:{name:{singular:"Kiloampere",plural:"Kiloamperes"},to_anchor:1e3}},Be={systems:{SI:Le}},Ye={b:{name:{singular:"Bit",plural:"Bits"},to_anchor:1},Kb:{name:{singular:"Kilobit",plural:"Kilobits"},to_anchor:1e3},Mb:{name:{singular:"Megabit",plural:"Megabits"},to_anchor:1e6},Gb:{name:{singular:"Gigabit",plural:"Gigabits"},to_anchor:1e9},Tb:{name:{singular:"Terabit",plural:"Terabits"},to_anchor:1e12}},Je={B:{name:{singular:"Byte",plural:"Bytes"},to_anchor:1},KB:{name:{singular:"Kilobyte",plural:"Kilobytes"},to_anchor:1e3},MB:{name:{singular:"Megabyte",plural:"Megabytes"},to_anchor:1e6},GB:{name:{singular:"Gigabyte",plural:"Gigabytes"},to_anchor:1e9},TB:{name:{singular:"Terabyte",plural:"Terabytes"},to_anchor:1e12}},Qe={systems:{bits:Ye,bytes:Je},anchors:{bits:{bytes:{ratio:1/8}},bytes:{bits:{ratio:8}}}},Ze={ea:{name:{singular:"Each",plural:"Each"},to_anchor:1},dz:{name:{singular:"Dozen",plural:"Dozens"},to_anchor:12}},Xe={systems:{metric:Ze}},xe={Wh:{name:{singular:"Watt-hour",plural:"Watt-hours"},to_anchor:3600},mWh:{name:{singular:"Milliwatt-hour",plural:"Milliwatt-hours"},to_anchor:3.6},kWh:{name:{singular:"Kilowatt-hour",plural:"Kilowatt-hours"},to_anchor:36e5},MWh:{name:{singular:"Megawatt-hour",plural:"Megawatt-hours"},to_anchor:36e8},GWh:{name:{singular:"Gigawatt-hour",plural:"Gigawatt-hours"},to_anchor:36e11},J:{name:{singular:"Joule",plural:"Joules"},to_anchor:1},kJ:{name:{singular:"Kilojoule",plural:"Kilojoules"},to_anchor:1e3},MJ:{name:{singular:"Megajoule",plural:"Megajoules"},to_anchor:1e6},GJ:{name:{singular:"Gigajoule",plural:"Gigajoules"},to_anchor:1e9}},er={systems:{SI:xe}},rr={N:{name:{singular:"Newton",plural:"Newtons"},to_anchor:1},kN:{name:{singular:"Kilonewton",plural:"Kilonewtons"},to_anchor:1e3},lbf:{name:{singular:"Pound-force",plural:"Pound-forces"},to_anchor:4.44822}},ar={systems:{SI:rr}},nr={mHz:{name:{singular:"millihertz",plural:"millihertz"},to_anchor:1/1e3},Hz:{name:{singular:"hertz",plural:"hertz"},to_anchor:1},kHz:{name:{singular:"kilohertz",plural:"kilohertz"},to_anchor:1e3},MHz:{name:{singular:"megahertz",plural:"megahertz"},to_anchor:1e3*1e3},GHz:{name:{singular:"gigahertz",plural:"gigahertz"},to_anchor:1e3*1e3*1e3},THz:{name:{singular:"terahertz",plural:"terahertz"},to_anchor:1e3*1e3*1e3*1e3},rpm:{name:{singular:"rotation per minute",plural:"rotations per minute"},to_anchor:1/60},"deg/s":{name:{singular:"degree per second",plural:"degrees per second"},to_anchor:1/360},"rad/s":{name:{singular:"radian per second",plural:"radians per second"},to_anchor:1/(Math.PI*2)}},lr={systems:{SI:nr}},or={lx:{name:{singular:"Lux",plural:"Lux"},to_anchor:1}},tr={"ft-cd":{name:{singular:"Foot-candle",plural:"Foot-candles"},to_anchor:1}},sr={systems:{metric:or,imperial:tr},anchors:{metric:{imperial:{ratio:1/10.76391}},imperial:{metric:{ratio:10.76391}}}},ir={nm:{name:{singular:"Nanometer",plural:"Nanometers"},to_anchor:1e-9},μm:{name:{singular:"Micrometer",plural:"Micrometers"},to_anchor:1e-6},mm:{name:{singular:"Millimeter",plural:"Millimeters"},to_anchor:.001},cm:{name:{singular:"Centimeter",plural:"Centimeters"},to_anchor:.01},m:{name:{singular:"Meter",plural:"Meters"},to_anchor:1},km:{name:{singular:"Kilometer",plural:"Kilometers"},to_anchor:1e3}},ur={in:{name:{singular:"Inch",plural:"Inches"},to_anchor:1/12},yd:{name:{singular:"Yard",plural:"Yards"},to_anchor:3},"ft-us":{name:{singular:"US Survey Foot",plural:"US Survey Feet"},to_anchor:1.000002},ft:{name:{singular:"Foot",plural:"Feet"},to_anchor:1},fathom:{name:{singular:"Fathom",plural:"Fathoms"},to_anchor:6},mi:{name:{singular:"Mile",plural:"Miles"},to_anchor:5280},nMi:{name:{singular:"Nautical Mile",plural:"Nautical Miles"},to_anchor:6076.12}},cr={systems:{metric:ir,imperial:ur},anchors:{metric:{imperial:{ratio:3.28084}},imperial:{metric:{ratio:1/3.28084}}}},mr={mcg:{name:{singular:"Microgram",plural:"Micrograms"},to_anchor:1/1e6},mg:{name:{singular:"Milligram",plural:"Milligrams"},to_anchor:1/1e3},g:{name:{singular:"Gram",plural:"Grams"},to_anchor:1},kg:{name:{singular:"Kilogram",plural:"Kilograms"},to_anchor:1e3},mt:{name:{singular:"Metric Tonne",plural:"Metric Tonnes"},to_anchor:1e6}},pr={oz:{name:{singular:"Ounce",plural:"Ounces"},to_anchor:1/16},lb:{name:{singular:"Pound",plural:"Pounds"},to_anchor:1},t:{name:{singular:"Ton",plural:"Tons"},to_anchor:2e3}},hr={systems:{metric:mr,imperial:pr},anchors:{metric:{imperial:{ratio:1/453.592}},imperial:{metric:{ratio:453.592}}}},gr={"kg/s":{name:{singular:"Kilogram per second",plural:"Kilograms per second"},to_anchor:1},"kg/h":{name:{singular:"Kilogram per hour",plural:"Kilograms per hour"},to_anchor:1/3600},"mt/h":{name:{singular:"Ton per hour",plural:"Tons per hour"},to_anchor:1/3.6}},_r={"lb/s":{name:{singular:"Pound per second",plural:"Pounds per second"},to_anchor:1},"lb/h":{name:{singular:"Pound per hour",plural:"Pounds per hour"},to_anchor:1/3600}},fr={systems:{metric:gr,imperial:_r},anchors:{metric:{imperial:{ratio:1/.453592}},imperial:{metric:{ratio:.453592}}}},dr={"min/km":{name:{singular:"Minute per kilometre",plural:"Minutes per kilometre"},to_anchor:.06},"s/m":{name:{singular:"Second per metre",plural:"Seconds per metre"},to_anchor:1}},br={"min/mi":{name:{singular:"Minute per mile",plural:"Minutes per mile"},to_anchor:.0113636},"s/ft":{name:{singular:"Second per foot",plural:"Seconds per foot"},to_anchor:1}},vr={systems:{metric:dr,imperial:br},anchors:{metric:{imperial:{ratio:.3048}},imperial:{metric:{ratio:1/.3048}}}},yr={ppm:{name:{singular:"Part-per Million",plural:"Parts-per Million"},to_anchor:1},ppb:{name:{singular:"Part-per Billion",plural:"Parts-per Billion"},to_anchor:.001},ppt:{name:{singular:"Part-per Trillion",plural:"Parts-per Trillion"},to_anchor:1e-6},ppq:{name:{singular:"Part-per Quadrillion",plural:"Parts-per Quadrillion"},to_anchor:1e-9}},Mr={systems:{SI:yr}},wr={pcs:{name:{singular:"Piece",plural:"Pieces"},to_anchor:1},"bk-doz":{name:{singular:"Bakers Dozen",plural:"Bakers Dozen"},to_anchor:13},cp:{name:{singular:"Couple",plural:"Couples"},to_anchor:2},"doz-doz":{name:{singular:"Dozen Dozen",plural:"Dozen Dozen"},to_anchor:144},doz:{name:{singular:"Dozen",plural:"Dozens"},to_anchor:12},"gr-gr":{name:{singular:"Great Gross",plural:"Great Gross"},to_anchor:1728},gros:{name:{singular:"Gross",plural:"Gross"},to_anchor:144},"half-dozen":{name:{singular:"Half Dozen",plural:"Half Dozen"},to_anchor:6},"long-hundred":{name:{singular:"Long Hundred",plural:"Long Hundred"},to_anchor:120},ream:{name:{singular:"Reams",plural:"Reams"},to_anchor:500},scores:{name:{singular:"Scores",plural:"Scores"},to_anchor:20},"sm-gr":{name:{singular:"Small Gross",plural:"Small Gross"},to_anchor:120},trio:{name:{singular:"Trio",plural:"Trio"},to_anchor:3}},kr={systems:{unit:wr}},Cr={W:{name:{singular:"Watt",plural:"Watts"},to_anchor:1},mW:{name:{singular:"Milliwatt",plural:"Milliwatts"},to_anchor:.001},kW:{name:{singular:"Kilowatt",plural:"Kilowatts"},to_anchor:1e3},MW:{name:{singular:"Megawatt",plural:"Megawatts"},to_anchor:1e6},GW:{name:{singular:"Gigawatt",plural:"Gigawatts"},to_anchor:1e9},PS:{name:{singular:"Horsepower (metric)",plural:"Horsepower (metric)"},to_anchor:735.49875}},Sr={"Btu/s":{name:{singular:"British thermal unit per second",plural:"British thermal units per second"},to_anchor:778.16937},"ft-lb/s":{name:{singular:"Foot-pound per second",plural:"Foot-pounds per second"},to_anchor:1},hp:{name:{singular:"Horsepower (British)",plural:"Horsepower (British)"},to_anchor:550}},$r={systems:{metric:Cr,imperial:Sr},anchors:{metric:{imperial:{ratio:.737562149}},imperial:{metric:{ratio:1/.737562149}}}},Ar={Pa:{name:{singular:"pascal",plural:"pascals"},to_anchor:1/1e3},kPa:{name:{singular:"kilopascal",plural:"kilopascals"},to_anchor:1},MPa:{name:{singular:"megapascal",plural:"megapascals"},to_anchor:1e3},hPa:{name:{singular:"hectopascal",plural:"hectopascals"},to_anchor:1/10},bar:{name:{singular:"bar",plural:"bar"},to_anchor:100},torr:{name:{singular:"torr",plural:"torr"},to_anchor:101325/76e4}},Kr={psi:{name:{singular:"pound per square inch",plural:"pounds per square inch"},to_anchor:1/1e3},ksi:{name:{singular:"kilopound per square inch",plural:"kilopound per square inch"},to_anchor:1},inHg:{name:{singular:"Inch of mercury",plural:"Inches of mercury"},to_anchor:491154e-9}},Gr={systems:{metric:Ar,imperial:Kr},anchors:{metric:{imperial:{ratio:.00014503768078}},imperial:{metric:{ratio:1/.00014503768078}}}},Pr={VARh:{name:{singular:"Volt-Ampere Reactive Hour",plural:"Volt-Amperes Reactive Hour"},to_anchor:1},mVARh:{name:{singular:"Millivolt-Ampere Reactive Hour",plural:"Millivolt-Amperes Reactive Hour"},to_anchor:.001},kVARh:{name:{singular:"Kilovolt-Ampere Reactive Hour",plural:"Kilovolt-Amperes Reactive Hour"},to_anchor:1e3},MVARh:{name:{singular:"Megavolt-Ampere Reactive Hour",plural:"Megavolt-Amperes Reactive Hour"},to_anchor:1e6},GVARh:{name:{singular:"Gigavolt-Ampere Reactive Hour",plural:"Gigavolt-Amperes Reactive Hour"},to_anchor:1e9}},Rr={systems:{SI:Pr}},zr={VAR:{name:{singular:"Volt-Ampere Reactive",plural:"Volt-Amperes Reactive"},to_anchor:1},mVAR:{name:{singular:"Millivolt-Ampere Reactive",plural:"Millivolt-Amperes Reactive"},to_anchor:.001},kVAR:{name:{singular:"Kilovolt-Ampere Reactive",plural:"Kilovolt-Amperes Reactive"},to_anchor:1e3},MVAR:{name:{singular:"Megavolt-Ampere Reactive",plural:"Megavolt-Amperes Reactive"},to_anchor:1e6},GVAR:{name:{singular:"Gigavolt-Ampere Reactive",plural:"Gigavolt-Amperes Reactive"},to_anchor:1e9}},Ir={systems:{SI:zr}},Nr={"m/s":{name:{singular:"Metre per second",plural:"Metres per second"},to_anchor:3.6},"km/h":{name:{singular:"Kilometre per hour",plural:"Kilometres per hour"},to_anchor:1},"mm/h":{name:{singular:"Millimeter per hour",plural:"Millimeters per hour"},to_anchor:1e-6}},Fr={mph:{name:{singular:"Mile per hour",plural:"Miles per hour"},to_anchor:1},knot:{name:{singular:"Knot",plural:"Knots"},to_anchor:1.150779},"ft/s":{name:{singular:"Foot per second",plural:"Feet per second"},to_anchor:.681818},"ft/min":{name:{singular:"Foot per minute",plural:"Feet per minute"},to_anchor:.0113636},"in/h":{name:{singular:"Inch per hour",plural:"Inches per hour"},to_anchor:1578e-8}},Dr={systems:{metric:Nr,imperial:Fr},anchors:{metric:{imperial:{ratio:1/1.609344}},imperial:{metric:{ratio:1.609344}}}},qr={C:{name:{singular:"degree Celsius",plural:"degrees Celsius"},to_anchor:1,anchor_shift:0},K:{name:{singular:"degree Kelvin",plural:"degrees Kelvin"},to_anchor:1,anchor_shift:273.15}},Vr={F:{name:{singular:"degree Fahrenheit",plural:"degrees Fahrenheit"},to_anchor:1},R:{name:{singular:"degree Rankine",plural:"degrees Rankine"},to_anchor:1,anchor_shift:459.67}},Tr={systems:{metric:qr,imperial:Vr},anchors:{metric:{imperial:{transform:function(n){return n/(5/9)+32}}},imperial:{metric:{transform:function(n){return(n-32)*(5/9)}}}}},pe=365.25,Ur={ns:{name:{singular:"Nanosecond",plural:"Nanoseconds"},to_anchor:1/1e9},mu:{name:{singular:"Microsecond",plural:"Microseconds"},to_anchor:1/1e6},ms:{name:{singular:"Millisecond",plural:"Milliseconds"},to_anchor:1/1e3},s:{name:{singular:"Second",plural:"Seconds"},to_anchor:1},min:{name:{singular:"Minute",plural:"Minutes"},to_anchor:60},h:{name:{singular:"Hour",plural:"Hours"},to_anchor:60*60},d:{name:{singular:"Day",plural:"Days"},to_anchor:60*60*24},week:{name:{singular:"Week",plural:"Weeks"},to_anchor:60*60*24*7},month:{name:{singular:"Month",plural:"Months"},to_anchor:60*60*24*pe/12},year:{name:{singular:"Year",plural:"Years"},to_anchor:60*60*24*pe}},Hr={systems:{SI:Ur}},Or={V:{name:{singular:"Volt",plural:"Volts"},to_anchor:1},mV:{name:{singular:"Millivolt",plural:"Millivolts"},to_anchor:.001},kV:{name:{singular:"Kilovolt",plural:"Kilovolts"},to_anchor:1e3}},jr={systems:{SI:Or}},Wr={mm3:{name:{singular:"Cubic Millimeter",plural:"Cubic Millimeters"},to_anchor:1/1e6},cm3:{name:{singular:"Cubic Centimeter",plural:"Cubic Centimeters"},to_anchor:1/1e3},ml:{name:{singular:"Millilitre",plural:"Millilitres"},to_anchor:1/1e3},cl:{name:{singular:"Centilitre",plural:"Centilitres"},to_anchor:1/100},dl:{name:{singular:"Decilitre",plural:"Decilitres"},to_anchor:1/10},l:{name:{singular:"Litre",plural:"Litres"},to_anchor:1},kl:{name:{singular:"Kilolitre",plural:"Kilolitres"},to_anchor:1e3},Ml:{name:{singular:"Megalitre",plural:"Megalitres"},to_anchor:1e6},Gl:{name:{singular:"Gigalitre",plural:"Gigalitres"},to_anchor:1e9},m3:{name:{singular:"Cubic meter",plural:"Cubic meters"},to_anchor:1e3},km3:{name:{singular:"Cubic kilometer",plural:"Cubic kilometers"},to_anchor:1e12},krm:{name:{singular:"Kryddmått",plural:"Kryddmått"},to_anchor:1/1e3},tsk:{name:{singular:"Tesked",plural:"Teskedar"},to_anchor:5/1e3},msk:{name:{singular:"Matsked",plural:"Matskedar"},to_anchor:15/1e3},kkp:{name:{singular:"Kaffekopp",plural:"Kaffekoppar"},to_anchor:150/1e3},glas:{name:{singular:"Glas",plural:"Glas"},to_anchor:200/1e3},kanna:{name:{singular:"Kanna",plural:"Kannor"},to_anchor:2.617}},Er={tsp:{name:{singular:"Teaspoon",plural:"Teaspoons"},to_anchor:1/6},Tbs:{name:{singular:"Tablespoon",plural:"Tablespoons"},to_anchor:1/2},in3:{name:{singular:"Cubic inch",plural:"Cubic inches"},to_anchor:.55411},"fl-oz":{name:{singular:"Fluid Ounce",plural:"Fluid Ounces"},to_anchor:1},cup:{name:{singular:"Cup",plural:"Cups"},to_anchor:8},pnt:{name:{singular:"Pint",plural:"Pints"},to_anchor:16},qt:{name:{singular:"Quart",plural:"Quarts"},to_anchor:32},gal:{name:{singular:"Gallon",plural:"Gallons"},to_anchor:128},ft3:{name:{singular:"Cubic foot",plural:"Cubic feet"},to_anchor:957.506},yd3:{name:{singular:"Cubic yard",plural:"Cubic yards"},to_anchor:25852.7}},Lr={systems:{metric:Wr,imperial:Er},anchors:{metric:{imperial:{ratio:33.8140226}},imperial:{metric:{ratio:1/33.8140226}}}},Br={"mm3/s":{name:{singular:"Cubic Millimeter per second",plural:"Cubic Millimeters per second"},to_anchor:1/1e6},"cm3/s":{name:{singular:"Cubic Centimeter per second",plural:"Cubic Centimeters per second"},to_anchor:1/1e3},"ml/s":{name:{singular:"Millilitre per second",plural:"Millilitres per second"},to_anchor:1/1e3},"cl/s":{name:{singular:"Centilitre per second",plural:"Centilitres per second"},to_anchor:1/100},"dl/s":{name:{singular:"Decilitre per second",plural:"Decilitres per second"},to_anchor:1/10},"l/s":{name:{singular:"Litre per second",plural:"Litres per second"},to_anchor:1},"l/min":{name:{singular:"Litre per minute",plural:"Litres per minute"},to_anchor:1/60},"l/h":{name:{singular:"Litre per hour",plural:"Litres per hour"},to_anchor:1/3600},"kl/s":{name:{singular:"Kilolitre per second",plural:"Kilolitres per second"},to_anchor:1e3},"kl/min":{name:{singular:"Kilolitre per minute",plural:"Kilolitres per minute"},to_anchor:50/3},"kl/h":{name:{singular:"Kilolitre per hour",plural:"Kilolitres per hour"},to_anchor:5/18},"m3/s":{name:{singular:"Cubic meter per second",plural:"Cubic meters per second"},to_anchor:1e3},"m3/min":{name:{singular:"Cubic meter per minute",plural:"Cubic meters per minute"},to_anchor:50/3},"m3/h":{name:{singular:"Cubic meter per hour",plural:"Cubic meters per hour"},to_anchor:5/18},"km3/s":{name:{singular:"Cubic kilometer per second",plural:"Cubic kilometers per second"},to_anchor:1e12}},Yr={"tsp/s":{name:{singular:"Teaspoon per second",plural:"Teaspoons per second"},to_anchor:1/6},"Tbs/s":{name:{singular:"Tablespoon per second",plural:"Tablespoons per second"},to_anchor:1/2},"in3/s":{name:{singular:"Cubic inch per second",plural:"Cubic inches per second"},to_anchor:.55411},"in3/min":{name:{singular:"Cubic inch per minute",plural:"Cubic inches per minute"},to_anchor:.55411/60},"in3/h":{name:{singular:"Cubic inch per hour",plural:"Cubic inches per hour"},to_anchor:.55411/3600},"fl-oz/s":{name:{singular:"Fluid Ounce per second",plural:"Fluid Ounces per second"},to_anchor:1},"fl-oz/min":{name:{singular:"Fluid Ounce per minute",plural:"Fluid Ounces per minute"},to_anchor:1/60},"fl-oz/h":{name:{singular:"Fluid Ounce per hour",plural:"Fluid Ounces per hour"},to_anchor:1/3600},"cup/s":{name:{singular:"Cup per second",plural:"Cups per second"},to_anchor:8},"pnt/s":{name:{singular:"Pint per second",plural:"Pints per second"},to_anchor:16},"pnt/min":{name:{singular:"Pint per minute",plural:"Pints per minute"},to_anchor:4/15},"pnt/h":{name:{singular:"Pint per hour",plural:"Pints per hour"},to_anchor:1/225},"qt/s":{name:{singular:"Quart per second",plural:"Quarts per second"},to_anchor:32},"gal/s":{name:{singular:"Gallon per second",plural:"Gallons per second"},to_anchor:128},"gal/min":{name:{singular:"Gallon per minute",plural:"Gallons per minute"},to_anchor:32/15},"gal/h":{name:{singular:"Gallon per hour",plural:"Gallons per hour"},to_anchor:8/225},"ft3/s":{name:{singular:"Cubic foot per second",plural:"Cubic feet per second"},to_anchor:957.506},"ft3/min":{name:{singular:"Cubic foot per minute",plural:"Cubic feet per minute"},to_anchor:957.506/60},"ft3/h":{name:{singular:"Cubic foot per hour",plural:"Cubic feet per hour"},to_anchor:957.506/3600},"yd3/s":{name:{singular:"Cubic yard per second",plural:"Cubic yards per second"},to_anchor:25852.7},"yd3/min":{name:{singular:"Cubic yard per minute",plural:"Cubic yards per minute"},to_anchor:25852.7/60},"yd3/h":{name:{singular:"Cubic yard per hour",plural:"Cubic yards per hour"},to_anchor:25852.7/3600}},Jr={systems:{metric:Br,imperial:Yr},anchors:{metric:{imperial:{ratio:33.8140227}},imperial:{metric:{ratio:1/33.8140227}}}},Qr={acceleration:De,angle:Ve,apparentPower:Ue,area:je,charge:Ee,current:Be,digital:Qe,each:Xe,energy:er,force:ar,frequency:lr,illuminance:sr,length:cr,mass:hr,massFlowRate:fr,pace:vr,partsPer:Mr,pieces:kr,power:$r,pressure:Gr,reactiveEnergy:Rr,reactivePower:Ir,speed:Dr,temperature:Tr,time:Hr,voltage:jr,volume:Lr,volumeFlowRate:Jr};function he(n){var l,i;let e,r,a,s;r=new ke({props:{icon:Ce}});let o=((i=(l=n[8])==null?void 0:l.meta)==null?void 0:i.last_updated_at)&&ge(n);return{c(){e=z("span"),T(r.$$.fragment),a=V(),o&&o.c(),$(e,"class","flex items-center gap-2 text-sm")},m(t,u){O(t,e,u),U(r,e,null),b(e,a),o&&o.m(e,null),s=!0},p(t,u){var m,h;(h=(m=t[8])==null?void 0:m.meta)!=null&&h.last_updated_at?o?o.p(t,u):(o=ge(t),o.c(),o.m(e,null)):o&&(o.d(1),o=null)},i(t){s||(C(r.$$.fragment,t),s=!0)},o(t){S(r.$$.fragment,t),s=!1},d(t){t&&j(e),H(r),o&&o.d()}}}function ge(n){var o,l;let e,r=le().diff(le((l=(o=n[8])==null?void 0:o.meta)==null?void 0:l.last_updated_at),"hours")+"",a,s;return{c(){e=E("Updated "),a=E(r),s=E(" hours ago")},m(i,t){O(i,e,t),O(i,a,t),O(i,s,t)},p(i,t){var u,m;t[0]&256&&r!==(r=le().diff(le((m=(u=i[8])==null?void 0:u.meta)==null?void 0:m.last_updated_at),"hours")+"")&&ee(a,r)},d(i){i&&j(e),i&&j(a),i&&j(s)}}}function Zr(n){let e,r,a=n[31].label+"",s,o,l,i=n[31].fullName+"",t,u;return{c(){e=z("div"),r=z("span"),s=E(a),o=V(),l=z("span"),t=E(i),$(l,"class","max-line-1 text-xs"),$(e,"class","flex flex-col"),$(e,"title",u=n[31].fullName)},m(m,h){O(m,e,h),b(e,r),b(r,s),b(e,o),b(e,l),b(l,t)},p(m,h){h[1]&1&&a!==(a=m[31].label+"")&&ee(s,a),h[1]&1&&i!==(i=m[31].fullName+"")&&ee(t,i),h[1]&1&&u!==(u=m[31].fullName)&&$(e,"title",u)},d(m){m&&j(e)}}}function _e(n){let e,r,a;function s(l){n[24](l)}let o={options:n[4].map(de),addSearch:!0,delayFocus:200,class:"w-[7.5rem] shrink-0",$$slots:{default:[Zr,({option:l})=>({31:l}),({option:l})=>[0,l?1:0]]},$$scope:{ctx:n}};return n[5]!==void 0&&(o.value=n[5]),e=new se({props:o}),Z.push(()=>X(e,"value",s)),e.$on("change",n[17]),{c(){T(e.$$.fragment)},m(l,i){U(e,l,i),a=!0},p(l,i){const t={};i[0]&16&&(t.options=l[4].map(de)),i[1]&3&&(t.$$scope={dirty:i,ctx:l}),!r&&i[0]&32&&(r=!0,t.value=l[5],x(()=>r=!1)),e.$set(t)},i(l){a||(C(e.$$.fragment,l),a=!0)},o(l){S(e.$$.fragment,l),a=!1},d(l){H(e,l)}}}function Xr(n){let e,r,a=n[31].label+"",s,o,l,i=n[31].fullName+"",t,u;return{c(){e=z("div"),r=z("span"),s=E(a),o=V(),l=z("span"),t=E(i),$(l,"class","max-line-1 text-xs"),$(e,"class","flex flex-col"),$(e,"title",u=n[31].fullName)},m(m,h){O(m,e,h),b(e,r),b(r,s),b(e,o),b(e,l),b(l,t)},p(m,h){h[1]&1&&a!==(a=m[31].label+"")&&ee(s,a),h[1]&1&&i!==(i=m[31].fullName+"")&&ee(t,i),h[1]&1&&u!==(u=m[31].fullName)&&$(e,"title",u)},d(m){m&&j(e)}}}function xr(n){let e,r,a,s,o,l,i,t,u,m,h,F=n[4],v,A,w,P,D,y,R,f;function d(p){n[20](p)}let g={options:n[1],addSearch:!0};n[7]!==void 0&&(g.value=n[7]),a=new se({props:g}),Z.push(()=>X(a,"value",d)),a.$on("change",n[21]);let _=n[7]==="currency"&&he(n);function M(p){n[22](p)}let L={class:"w-full"};n[3]!==void 0&&(L.value=n[3]),u=new me({props:L}),Z.push(()=>X(u,"value",M)),u.$on("keydown",ea),u.$on("input",n[23]);let K=_e(n);function oe(p){n[25](p)}let re={class:"w-full"};n[2]!==void 0&&(re.value=n[2]),w=new me({props:re}),Z.push(()=>X(w,"value",oe)),w.$on("input",n[26]);function te(p){n[27](p)}let ae={options:n[4].map(be),addSearch:!0,class:"w-[7.5rem] shrink-0",delayFocus:200,$$slots:{default:[Xr,({option:p})=>({31:p}),({option:p})=>[0,p?1:0]]},$$scope:{ctx:n}};return n[6]!==void 0&&(ae.value=n[6]),y=new se({props:ae}),Z.push(()=>X(y,"value",te)),y.$on("change",n[17]),{c(){e=z("div"),r=z("div"),T(a.$$.fragment),o=V(),_&&_.c(),l=V(),i=z("div"),t=z("div"),T(u.$$.fragment),h=V(),K.c(),v=V(),A=z("div"),T(w.$$.fragment),D=V(),T(y.$$.fragment),$(r,"class","flex items-center justify-between gap-3"),$(t,"class","flex justify-between gap-3"),$(A,"class","flex justify-between gap-3"),$(i,"class","mt-4 flex flex-col gap-3"),$(e,"class","w-[24rem] px-4 py-3")},m(p,k){O(p,e,k),b(e,r),U(a,r,null),b(r,o),_&&_.m(r,null),b(e,l),b(e,i),b(i,t),U(u,t,null),b(t,h),K.m(t,null),b(i,v),b(i,A),U(w,A,null),b(A,D),U(y,A,null),f=!0},p(p,k){const B={};k[0]&2&&(B.options=p[1]),!s&&k[0]&128&&(s=!0,B.value=p[7],x(()=>s=!1)),a.$set(B),p[7]==="currency"?_?(_.p(p,k),k[0]&128&&C(_,1)):(_=he(p),_.c(),C(_,1),_.m(r,null)):_&&(ie(),S(_,1,1,()=>{_=null}),ue());const Y={};!m&&k[0]&8&&(m=!0,Y.value=p[3],x(()=>m=!1)),u.$set(Y),k[0]&16&&ce(F,F=p[4])?(ie(),S(K,1,1,Me),ue(),K=_e(p),K.c(),C(K,1),K.m(t,null)):K.p(p,k);const J={};!P&&k[0]&4&&(P=!0,J.value=p[2],x(()=>P=!1)),w.$set(J);const c={};k[0]&16&&(c.options=p[4].map(be)),k[1]&3&&(c.$$scope={dirty:k,ctx:p}),!R&&k[0]&64&&(R=!0,c.value=p[6],x(()=>R=!1)),y.$set(c)},i(p){f||(C(a.$$.fragment,p),C(_),C(u.$$.fragment,p),C(K),C(w.$$.fragment,p),C(y.$$.fragment,p),f=!0)},o(p){S(a.$$.fragment,p),S(_),S(u.$$.fragment,p),S(K),S(w.$$.fragment,p),S(y.$$.fragment,p),f=!1},d(p){p&&j(e),H(a),_&&_.d(),H(u),K.d(p),H(w),H(y)}}}function fe(n){return n.toString().replace(/\B(?=(\d{3})+(?!\d))/g,",")}const ea=n=>{!["Backspace","Delete","ArrowLeft","ArrowRight","ArrowUp","ArrowDown"].includes(n.key)&&![".","0","1","2","3","4","5","6","7","8","9"].includes(n.key)&&n.preventDefault()},de=n=>({value:n.abbr,label:n.abbr,fullName:n.singular}),be=n=>({value:n.abbr,label:n.abbr,fullName:n.singular});function ra(n,e,r){var Y,J;let a,s,o,l,i,t,u;const{allCurrencies:m,currencyRates:h,from:F,fromUnit:v,selectedBase:A,to:w,toUnit:P}=we("stores");N(n,m,c=>r(9,u=c)),N(n,h,c=>r(8,t=c)),N(n,F,c=>r(29,s=c)),N(n,v,c=>r(5,o=c)),N(n,A,c=>r(7,i=c)),N(n,w,c=>r(28,a=c)),N(n,P,c=>r(6,l=c));let{allUnits:D=[]}=e,{convert:y}=e,{bases:R}=e,f=a,d=s;i||G(A,i=R[0].value,i);let g=i==="currency"?u.map(c=>({abbr:c.code,singular:c.name,measure:"currency"})):D.filter(c=>c.measure===i);function _(c,I,W){const q=(t==null?void 0:t.data)??null;if(console.log(q),!q[I]||!q[W])return;const Q=c*(q[W].value/q[I].value);return Q?Q.toFixed(2):"0"}o||G(v,o=((Y=g==null?void 0:g[0])==null?void 0:Y.abbr)??null,o),l||G(P,l=((J=g==null?void 0:g[1])==null?void 0:J.abbr)??null,l);const M=()=>{var I;r(3,d=fe(d.replace(/,/g,"")));const c=parseFloat(d.replace(/,/g,""))??0;if(i==="currency")r(2,f=((I=_(c,o,l))==null?void 0:I.toLocaleString())??"");else try{r(2,f=y(c).from(o).to(l).toLocaleString())}catch{}(f==="NaN"||d==="NaN")&&(r(2,f="0"),r(3,d="")),G(F,s=d,s),G(w,a=f,a)},L=()=>{var I;r(2,f=fe(f.replace(/,/g,"")));const c=parseFloat(f.replace(/,/g,""))??0;if(i==="currency")r(3,d=((I=_(c,l,o))==null?void 0:I.toLocaleString())??"");else try{r(3,d=y(c).from(l).to(o).toLocaleString())}catch{}(f==="NaN"||d==="NaN")&&(r(2,f=""),r(3,d="0")),G(F,s=d,s),G(w,a=f,a)};function K(c){i=c,A.set(i)}const oe=c=>{var I,W,q,Q;if(i==="currency"){r(4,g=u.map(ne=>({abbr:ne.code,singular:ne.name,measure:"currency"}))),G(v,o=((I=g==null?void 0:g[0])==null?void 0:I.abbr)??null,o),G(P,l=((W=g==null?void 0:g[1])==null?void 0:W.abbr)??null,l),M();return}r(4,g=D.filter(ne=>ne.measure===i)),G(v,o=((q=g==null?void 0:g[0])==null?void 0:q.abbr)??null,o),G(P,l=((Q=g==null?void 0:g[1])==null?void 0:Q.abbr)??null,l),M()};function re(c){d=c,r(3,d)}const te=c=>{M()};function ae(c){o=c,v.set(o)}function p(c){f=c,r(2,f)}const k=c=>{L()};function B(c){l=c,P.set(l)}return n.$$set=c=>{"allUnits"in c&&r(0,D=c.allUnits),"convert"in c&&r(19,y=c.convert),"bases"in c&&r(1,R=c.bases)},[D,R,f,d,g,o,l,i,t,u,m,h,F,v,A,w,P,M,L,y,K,oe,re,te,ae,p,k,B]}class aa extends ve{constructor(e){super(),ye(this,e,ra,xr,ce,{allUnits:0,convert:19,bases:1},null,[-1,-1])}}function na(n){let e,r;return e=new ze({}),{c(){T(e.$$.fragment)},m(a,s){U(e,a,s),r=!0},p:Me,i(a){r||(C(e.$$.fragment,a),r=!0)},o(a){S(e.$$.fragment,a),r=!1},d(a){H(e,a)}}}function la(n){let e,r;return e=new aa({props:{bases:n[9],allUnits:n[0],convert:n[1]}}),{c(){T(e.$$.fragment)},m(a,s){U(e,a,s),r=!0},p(a,s){const o={};s&1&&(o.allUnits=a[0]),s&2&&(o.convert=a[1]),e.$set(o)},i(a){r||(C(e.$$.fragment,a),r=!0)},o(a){S(e.$$.fragment,a),r=!1},d(a){H(e,a)}}}function oa(n){let e,r,a,s;const o=[la,na],l=[];function i(t,u){return t[2]&&t[5]&&t[4].length>0&&t[3]?0:1}return e=i(n),r=l[e]=o[e](n),{c(){r.c(),a=Se()},m(t,u){l[e].m(t,u),O(t,a,u),s=!0},p(t,[u]){let m=e;e=i(t),e===m?l[e].p(t,u):(ie(),S(l[m],1,1,()=>{l[m]=null}),ue(),r=l[e],r?r.p(t,u):(r=l[e]=o[e](t),r.c()),C(r,1),r.m(a.parentNode,a))},i(t){s||(C(r),s=!0)},o(t){S(r),s=!1},d(t){l[e].d(t),t&&j(a)}}}function ta(n,e,r){let a,s,o,{config:l}=e;const i={path:"user_data/{uid}/profiles/{currentProfile}/apps/"+l.id,currentProfile:$e,uid:Ae},{create:t,createPersist:u,isFetched:m,start:h,stop:F}=Re(i);N(n,m,M=>r(5,o=M));const v=t("from","0"),A=t("to","0"),w=t("base","currency"),P=t("fromUnit","USD"),D=t("toUnit","EUR"),y=u("allCurrencies",[]);N(n,y,M=>r(4,s=M));const R=u("currencyRates",null);N(n,R,M=>r(3,a=M)),Ke("stores",{from:v,to:A,selectedBase:w,fromUnit:P,toUnit:D,allCurrencies:y,currencyRates:R});let f=[],d,g=!1;Ge(async()=>{r(1,d=Ne(Qr)),r(0,f=d().list()),r(2,g=!0);const M=await Pe.get("/apps/currency");G(y,s=M.data.currencies,s),G(R,a=M.data.rates,a)});const _=[{value:"area",label:"Area"},{value:"currency",label:"Currency"},{value:"energy",label:"Energy"},{value:"length",label:"Length"},{value:"power",label:"Power"},{value:"digital",label:"Storage"},{value:"speed",label:"Speed"},{value:"temperature",label:"Temperature"},{value:"time",label:"Time"},{value:"voltage",label:"Voltage"},{value:"volume",label:"Volume"},{value:"mass",label:"Weight"}];return n.$$set=M=>{"config"in M&&r(10,l=M.config)},[f,d,g,a,s,o,m,y,R,_,l]}class ua extends ve{constructor(e){super(),ye(this,e,ta,oa,ce,{config:10})}}export{ua as default};
